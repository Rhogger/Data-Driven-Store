services:
  # PostgreSQL
  postgres:
    image: postgres:14-alpine
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '5433:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/postgres:/docker-entrypoint-initdb.d
    networks:
      - datastore-network
    restart: unless-stopped

  # MongoDB
  mongo:
    image: mongo:6.0
    container_name: mongo_db
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGO_INITDB_DATABASE: datadriven_store
    ports:
      - '27017:27017'
    volumes:
      - mongo_data:/data/db
      - ./db/mongodb/init.js:/docker-entrypoint-initdb.d/init.js:ro
    networks:
      - datastore-network
    restart: unless-stopped

  # Redis
  redis:
    image: redis:7-alpine
    container_name: redis_cache
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - datastore-network
    restart: unless-stopped

  # # Cassandra
  # cassandra:
  #   image: cassandra:4.0
  #   container_name: cassandra_db
  #   ports:
  #     - "9042:9042"
  #   volumes:
  #     - cassandra_data:/var/lib/cassandra
  #   networks:
  #     - datastore-network
  #   restart: unless-stopped

  # # Neo4j
  # neo4j:
  #   image: neo4j:5.7
  #   container_name: neo4j_db
  #   environment:
  #     NEO4J_AUTH: neo4j/admin
  #   ports:
  #     - "7474:7474"
  #     - "7687:7687"
  #   volumes:
  #     - neo4j_data:/data
  #   networks:
  #     - datastore-network
  #   restart: unless-stopped

  dds_api:
    build: .
    container_name: datadriven_api
    ports:
      - '${APP_PORT:-3000}:${APP_PORT:-3000}'
    env_file:
      - ./.env
    environment:
      PORT: ${APP_PORT:-3000}
      NODE_ENV: ${NODE_ENV:-development}

      PG_USER: ${POSTGRES_USER}
      PG_PASSWORD: ${POSTGRES_PASSWORD}
      PG_DB: ${POSTGRES_DB}
      PG_HOST: postgres
      PG_PORT: 5432

      MONGODB_URI: mongodb://app_user:app_password123@mongo:27017/datadriven_store
      MONGODB_DATABASE: datadriven_store

      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0

    depends_on:
      - postgres
      - mongo
      - redis
      # - cassandra
      # - neo4j
    networks:
      - datastore-network
    volumes:
      - .:/app
      - /app/node_modules
    command: ['/bin/sh', './run.sh']
    restart: unless-stopped

volumes:
  postgres_data:
  mongo_data:
  redis_data:
  # cassandra_data:
  # neo4j_data:

networks:
  datastore-network:
    driver: bridge
